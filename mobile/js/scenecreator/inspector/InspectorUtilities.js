import * as React from 'react';

/**
 *  Wrapper for an optimistic property on an inspector behavior.
 *  We need to send all changes across the bridge to lua, but we don't want to wait for them
 *  to come back before we show them in the UI. Based on `Tools::useValue()`.
 *
 *  @param behavior a Behavior object generated by SceneCreatorInspector, containing the
 *         data for a single behavior.
 *  @param propName the property name to read from the behavior.
 *  @param sendAction a method to send actions (i.e. set prop, remove behavior) to this behavior
 *         in lua.
 */
export const useOptimisticBehaviorValue = ({ behavior, propName, sendAction }) => {
  const [value, setValue] = React.useState(null);
  const [lastSentEventId, setLastSentEventId] = React.useState(null);

  const luaValue = behavior?.properties[propName];
  if (behavior && value !== luaValue) {
    if (!behavior.lastReportedEventId || behavior.lastReportedEventId === lastSentEventId) {
      setValue(luaValue);
    }
  }

  const setValueAndSendAction = (action, newValue, actionValue) => {
    setValue(newValue);
    if (actionValue === undefined) {
      actionValue = newValue;
    }
    setLastSentEventId(sendAction(action, actionValue));
  };

  return [value, setValueAndSendAction];
};
