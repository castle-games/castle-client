import platform from 'platform';
import url from 'url';

export const getRandomInt = (min, max) => {
  return Math.floor(Math.random() * (max - min + 1)) + min;
};

export function isWindows() {
  const os = platform.os.toString();
  return (os.toLowerCase().includes('windows'));
}

// fix a broken file path generated by calling url.resolve() on windows
function _fixWindowsFilePath(path) {
  if (path.startsWith('file://')) {
    // broken paths look something like file://c/Users/...
    let filePath = path.substring(7);
    let pathComponents = filePath.split('/');
    while (pathComponents.length && pathComponents[0].length == 0) {
      pathComponents.splice(0, 1);
    }
    if (pathComponents.length > 1) {
      let mount = pathComponents[0].toString().toUpperCase();
      if (mount[mount.length - 1] !== ':') {
        mount = `${mount}:`;
      }
      pathComponents[0] = mount;
      filePath = pathComponents.join('\\');
    }
    return `file://${filePath}`;
  }
  return path;
}

export function getLuaEntryPoint(game) {
  if (game.entryPoint) {
    // if the server knows about this game, just use the value given by the server
    return game.entryPoint;
  }
  if (!game.url) {
    throw new Error(`Can't resolve lua entry point against this game url: ${game.url}`);
  }
  let entryPoint;
  if (game.metadata && game.metadata.main) {
    entryPoint = url.resolve(game.url, game.metadata.main);
  } else {
    entryPoint = game.url;
  }
  if (isWindows() && entryPoint) {
    game.entryPoint = _fixWindowsFilePath(entryPoint);
  }
  return entryPoint;
};
